package arraySort

/* 插入排序
 * 一个有序的数组，要往里面添加一个新数据后，继续保持数据是有序的
 * 将数组中的数据分为两个区间，【已排序区间】和【未排序区间】
 * 插入排序也包含两种操作，一种是【元素的比较】，一种是【元素移动】
 * 插入排序要比冒泡排序更受欢迎：冒泡排序的数据交换要比插入排序的数据移动要复杂，冒泡排序需要 3 个赋值操作，而插入排序只需要 1 个。
 */

/* 冒泡排序
 * 冒泡排序只会操作相邻的两个数据。
 * 每次冒泡操作都会对相邻的两个元素进行比较，看是否满足大小关系要求。如果不满足就让它俩互换。
 */

/* 选择排序
 * 选择排序算法的实现思路有点类似插入排序，也分【已排序区间】和【未排序区间】。
 * 但是选择排序每次会从未排序区间中找到最小的元素，将其放到已排序区间的末尾。
 */
